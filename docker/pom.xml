<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>flowman-docker</artifactId>
    <name>Flowman Docker image</name>
    <packaging>pom</packaging>

    <parent>
        <groupId>com.dimajix.flowman</groupId>
        <artifactId>flowman-root</artifactId>
        <version>0.7.1-SNAPSHOT</version>
        <relativePath>..</relativePath>
    </parent>

    <properties>
        <docker.base-image.repository>dimajix/spark</docker.base-image.repository>
        <docker.base-image.version>${spark.version}</docker.base-image.version>
    </properties>

    <profiles>
        <profile>
            <id>CDH-5.15</id>
            <properties>
                <docker.base-image.version>2.3.3</docker.base-image.version>
            </properties>
        </profile>
    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/build</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>../flowman-dist/target</directory>
                                    <includes>
                                        <include>flowman-dist-${project.version}-bin.tar.gz</include>
                                    </includes>
                                    <filtering>false</filtering>
                                </resource>
                                <resource>
                                    <directory>.</directory>
                                    <includes>
                                        <include>bin/*</include>
                                        <include>conf/*</include>
                                        <include>libexec/*</include>
                                    </includes>
                                    <filtering>false</filtering>
                                </resource>
                                <resource>
                                    <directory>.</directory>
                                    <includes>
                                        <include>Dockerfile</include>
                                        <include>docker-compose.yml</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default</id>
                        <goals>
                            <goal>build</goal>
                            <!-- <goal>push</goal> -->
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <repository>dimajix/flowman</repository>
                    <contextDirectory>target/build</contextDirectory>
                    <useMavenSettingsForAuth>true</useMavenSettingsForAuth>
                    <tag>${project.version}</tag>
                    <pullNewerImage>false</pullNewerImage>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>

